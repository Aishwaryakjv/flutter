import 'package:flutter/material.dart';
import 'package:todo_list_firebase/loading.dart';
import 'package:todo_list_firebase/model/todo.dart';
import 'package:todo_list_firebase/service/database_service.dart';

class TodoList extends StatefulWidget {
  const TodoList({super.key});

  @override
  State<TodoList> createState() => _TodoListState();
}

class _TodoListState extends State<TodoList> {
  bool isComplet=false;
  TextEditingController todoTitleController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: StreamBuilder<List<Todo>>(
          stream: DatabaseService().listTodos(),
          builder: (context, snapshot) {
            if(!snapshot.hasData) {
              return Loading();
            }
            // print(snapshot.data);
            List<Todo>? todos = snapshot.data;
            return Padding(
              padding: EdgeInsets.all(25),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text("All ToDos",
                  style: TextStyle( fontSize: 30, fontWeight: FontWeight.bold, color: Colors.white),
                  ),
        
                  Divider(
                    color: Colors.grey[500],
                  ),
                  SizedBox(height: 20),
        
                  ListView.separated(
                    separatorBuilder: (context, index) => Divider(color: Colors.grey[800],),
                    shrinkWrap: true,
                    itemCount: todos!.length,
                    // itemCount: snapshot.data!.length,
                    itemBuilder: (context, index){
                      return Dismissible(
                        key: Key(todos[index].title),
                        // key: Key(index.toString()),
                        background: Container(
                          padding: EdgeInsets.only(left: 20),
                          alignment: Alignment.centerLeft,
                          // alignment: Alignment.centerRight,
                          child: Icon(Icons.delete),
                          color: Colors.pink,
                        ),
                        onDismissed: (direction) async {
                          // print("removed");
                          await DatabaseService().removeTodo(todos[index].uid);
                        },
                        child: ListTile(
                          onTap: (){
                            // setState(() {
                            //   isComplet = !isComplet;
                            // });
                            DatabaseService().completeTask(todos[index].uid);
                          },
                          leading: Container(
                            height: 25,
                            width: 25,
                            decoration: BoxDecoration(
                              color: Theme.of(context).primaryColor,
                              // shape: BoxShape.circle,
                            ),
                            child: todos[index].isComplet
                            ? Icon(
                                Icons.check,
                                color: Colors.white,
                              )
                            :Container(),
                          ),
                          title: Text(
                            todos[index].title,
                            // "Todo title", 
                            style: TextStyle(
                            color: Colors.grey[200],
                            fontSize: 20,
                            fontWeight: FontWeight.w500,
                          ),
                          ),
                        ),
                      );
                    },
                  )
                ],
              ),
            );
          }
        ),
      ),
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        backgroundColor: Theme.of(context).primaryColor,
        onPressed: () {
          showDialog(
            context: context, 
            builder: (context) {
              return SimpleDialog(
                contentPadding: EdgeInsets.symmetric(horizontal: 20,vertical: 20),
                backgroundColor: Colors.grey[700],
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15),
                ),
                title: Row(
                  children: [
                    Text("Add Todo", style: TextStyle(fontSize: 25,color: Colors.white),),
                    Spacer(),
                    IconButton(
                      icon: Icon(
                        Icons.cancel, 
                        color: Colors.grey[300],
                        size: 30,
                        ),
                      onPressed: ()=> Navigator.pop(context),
                    ),
                  ],
                ),
                children: [
                  Divider(
                    color: Colors.grey[400],
                  ),
                  TextFormField(
                    controller: todoTitleController,
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 20,
                      height: 1.5,
                    ),
                    autofocus: true,
                    decoration: InputDecoration(hintText: "eg: exercise",hintStyle: TextStyle(
                      color: Colors.grey[300],
                    ),
                    border: InputBorder.none,
                    ),
                  ),
                  SizedBox(height: 20,),
                  SizedBox(
                    width: MediaQuery.of(context).size.width,
                    height: 40,
                    child: TextButton(
                      child: Text("Add"),
                      style: TextButton.styleFrom(
                        primary: Colors.white,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                        backgroundColor: Theme.of(context).primaryColor,
                      ),
                      onPressed: () async{
                        if(todoTitleController.text.isNotEmpty)
                        {
                          // print(todoTitleController.text);
                          await DatabaseService()
                            .createNewTodo(todoTitleController.text.trim());
                          Navigator.pop(context);
                        }
                      },
                    ),
                  )
                ],
              );
            }
          );
        },
      ),
    );
  }
}
